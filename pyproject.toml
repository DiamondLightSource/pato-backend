[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pato"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
description = "PATO's backend"
dependencies = [
    "pika~=1.3.2",
    "SQLAlchemy~=2.0.16",
    "fastapi~=0.104.0",
    "uvicorn[standard]~=0.22.0",
    "requests~=2.31.0",
    "mysqlclient~=2.1.1",
    "mysql-connector-python~=8.0.33",
    "pydantic~=1.10.13",
    "types-requests"
]
dynamic = ["version"]
license.file = "LICENSE"
readme = "README.rst"
requires-python = ">=3.9"    

[project.optional-dependencies]
dev = [
    "black~=23.12.0",
    "mypy",
    "pipdeptree",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "ruff",
    "sphinx-autobuild",
    "sphinx-copybutton",
    "sphinx-design",
    "tox-direct",
    "types-mock",
    "pytest-asyncio",
    "pytest-dotenv",
    "httpx",
    "pydata-sphinx-theme < 0.10.1",
    "setuptools_scm[toml]>=6.2"
]

[project.scripts]
pato = "pato.__main__:main"

[project.urls]
GitHub = "https://github.com/DiamondLightSource/pato-backend"

[[project.authors]] # Further authors may be added by duplicating this section
email = "guilherme.de-freitas@diamond.ac.uk"
name = "Guilherme de Freitas"


[tool.setuptools_scm]
write_to = "src/pato/_version.py"

[tool.mypy]
ignore_missing_imports = true # Ignore missing stubs in imported modules

[tool.pytest.ini_options]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = """
    --tb=native -vv --doctest-modules --doctest-glob="*.rst"
    """
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
filterwarnings = "error"
env_override_existing_values = 1
env_files = [
    ".test.env"
]

[tool.coverage.run]
data_file = "/tmp/pato.coverage"

[tool.coverage.paths]
# Tests are run from installed location, map back to the src directory
source = ["src", "**/site-packages/"]

# tox must currently be configured via an embedded ini string
# See: https://github.com/tox-dev/tox/issues/999
[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist=True

[testenv:{pre-commit,mypy,pytest}]
# Don't create a virtualenv for the command, requires tox-direct plugin
direct = True
passenv = *
allowlist_externals =
    pytest
    pre-commit
    mypy
    sphinx-build
    sphinx-autobuild
commands =
    pytest: pytest tests --cov=pato --cov-report term --cov-report xml:cov.xml -W ignore::DeprecationWarning {posargs}
    mypy: mypy src tests {posargs}
    pre-commit: pre-commit run --all-files {posargs}
"""


[tool.ruff]
src = ["src", "tests"]
line-length = 120
select = [
    "C4",   # flake8-comprehensions - https://beta.ruff.rs/docs/rules/#flake8-comprehensions-c4
    "E",    # pycodestyle errors - https://beta.ruff.rs/docs/rules/#error-e
    "F",    # pyflakes rules - https://beta.ruff.rs/docs/rules/#pyflakes-f
    "W",    # pycodestyle warnings - https://beta.ruff.rs/docs/rules/#warning-w
    "I001", # isort
]
